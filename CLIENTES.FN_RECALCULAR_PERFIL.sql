CREATE OR REPLACE FUNCTION CLIENTES.FN_RECALCULAR_PERFIL ( 
	PCLIENTE_ID BIGINT ) 
	RETURNS SMALLINT   
	LANGUAGE SQL 
	SPECIFIC CLIENTES.FN_RECALCULAR_PERFIL 
	NOT DETERMINISTIC 
	READS SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = *NONE , 
	DLYPRP = *NO , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
    --en modificacion de prueba
BEGIN
------------------------------------------------------------------------------*
-- 
--Retorna si se debe recalcular Perfil (1) o no (0) 
--Analiza: 
--       Si el ponderador de Perfil Cambio (RECALCULA) 2021.06.07 
--      Cliente recibido por parámetro no existe en SOI_MATRIZ (NO recalcula) 
--      SI perfil Guardado es igual a perfil inicial y NO tiene ventas, 
--		(NO recalcula) 
--      Si ESTADO = 4  y Cobra Haberes en BLP  (RECALCULA) 
--      Si cambió el INDICE GLOBAL con respecto al guardado en CLIENTES.CLIENTE
-- 
--     (Sin importar el Estado)  O 
--      cambiaron las Ventas con respecto a las guardadas y no es un Legajo 
--		Rechazado (SI recalcula)     
------------------------------------------------------------------------------*
-- 
DECLARE VPERFIL_PORCENTAJE_CALCULADO NUMERIC ( 13 , 2 ) DEFAULT 0 ;
DECLARE VTIPO_DOCUMENTO INTEGER DEFAULT 0 ;
DECLARE VTIPO_DOCUMENTO_SBI INTEGER DEFAULT 0 ;
DECLARE VNUMERO_DOCUMENTO BIGINT DEFAULT 0 ;
DECLARE VINDICEGLOBAL NUMERIC ( 3 , 0 ) DEFAULT NULL ;
DECLARE VCOBRA_HABERES_BLP SMALLINT DEFAULT 0 ;
DECLARE VRECALCULAR_PERFIL SMALLINT ;
DECLARE VPERFIL_PONDERADOR_VARIACION_MAXIMA NUMERIC ( 13 , 2 )
DEFAULT 0 ;
DECLARE VDENOMINACION VARCHAR ( 100 ) DEFAULT '' ;

IF PCLIENTE_ID IS NULL
THEN
SET VRECALCULAR_PERFIL = 0 ;
GOTO FIN ;
END IF ;

--  Recupero valores de parametros. 
--  Tipo y Número de Documento 
CALL CLIENTES . SP_RECUPERAR_TIPO_NRODOC_CLIENTE ( PCLIENTE_ID ,
VTIPO_DOCUMENTO , VNUMERO_DOCUMENTO ) ;

--Recupero tipo de documento original  y Número de Documento 
SET VTIPO_DOCUMENTO_SBI =
INT ( SUBSTR ( DIGITS ( DEC ( PCLIENTE_ID , 13 , 0 ) ) , 1 , 2 ) ) ;
SET VNUMERO_DOCUMENTO =
BIGINT ( SUBSTR ( DIGITS ( DEC ( PCLIENTE_ID , 13 , 0 ) ) , 3 , 11 ) ) ;

--Si no existe en SOIMATRIZ no recalcula 
SET VINDICEGLOBAL = NULL ;

SELECT INDICEGLOBAL INTO VINDICEGLOBAL
FROM CLIENTES . SOI_MATRIZ
WHERE NUMEROIDENTIFICACION = VNUMERO_DOCUMENTO AND
TIPOIDENTIFICACION = VTIPO_DOCUMENTO ;
IF VINDICEGLOBAL IS NULL THEN

SET VRECALCULAR_PERFIL = 0 ;
GOTO FIN ;
END IF ;

--Si cambio ponderador de perfil recalcula 
CALL CLIENTES . SP_RECUPERAR_PARAMETROS_PERFIL ( 1 , VDENOMINACION ,
VPERFIL_PONDERADOR_VARIACION_MAXIMA ) ;

SELECT CASE WHEN COUNT ( * ) > 0 THEN 1 ELSE 0 END INTO VRECALCULAR_PERFIL
FROM CLIENTES . CLIENTE C
WHERE ID = PCLIENTE_ID
AND PERFIL_PONDERADOR_VARIACION_MAXIMA <>
VPERFIL_PONDERADOR_VARIACION_MAXIMA ;

IF VRECALCULAR_PERFIL = 1 THEN
GOTO FIN ;
END IF ;

--  RECUPERO PONDERADOR MAXIMA VARIACION 
SELECT VALOR INTO VPERFIL_PORCENTAJE_CALCULADO
FROM CLIENTES . PARAMETROS_PONDERADOR_PERFIL
WHERE VINDICEGLOBAL
BETWEEN DESDE AND HASTA ;

-- 
SELECT CASE WHEN COUNT ( * ) > 0 THEN 1 ELSE 0 END INTO VRECALCULAR_PERFIL
FROM CLIENTES . CLIENTE
WHERE ID = PCLIENTE_ID AND
IFNULL ( CLIENTES . FNPORCCALC ( PCLIENTE_ID ) , 0 ) <>
IFNULL ( PERFIL_PORCENTAJE_CALCULADO , 0 ) AND
IFNULL ( CLIENTES . FNPORCCALC ( ID ) , 0 ) <> 0 ; --    19.04.2021 
--IFNULL ( PERFIL_PORCENTAJE_CALCULADO , 0 ) <> 0 ;   19.04.2021 
IF VRECALCULAR_PERFIL = 1 THEN
GOTO FIN ;
END IF ;


--------------------------------------------------------------------------- 
--Siempre y cuando el estado <> 4 o sea = 4 cobre haberes en BLP 
--SI perfil Guardado es igual a perfil inicial y NO tiene ventas, 
--NO RECALCULA PERFIL  
--SI tiene ventas y son diferentes a las guardadas RECALCULA 
--------------------------------------------------------------------------- 
--Estado Legajo es Rechazado y Cobra Haberes en BLP 
WITH PRECALIFICADOS_COBRAEN_BLP AS
( SELECT CASE WHEN COUNT ( * ) > 0 THEN 1 ELSE 0 END AS COBRA_EN_BLP
FROM BL2SADATA . CREMPHABB1
WHERE CRULTRAMO = 'S' AND
CRTIPDOCE = VTIPO_DOCUMENTO_SBI AND
CRNRODOCE = VNUMERO_DOCUMENTO AND CRPROMACAJ > 0
GROUP BY CRSUCCTA , CRSISCTA , CRTIPCTA , CRNROCTA , CRPROMACAJ ) ,
NOPRECALIFICADOS_COBRAEN_BLP AS
( SELECT CASE WHEN COUNT ( * ) > 0 THEN 1 ELSE 0 END AS COBRA_EN_BLP
FROM CLIENTES . ACTIVIDAD_CLIENTE
WHERE CLIENTE_ID = PCLIENTE_ID AND
IFNULL ( TIPO_ACTIVIDAD_ID , 0 ) IN ( 1 , 2 )
AND IFNULL ( ACREDITACION_SUELDO_ID , 0 ) = 1 )
SELECT COBRA_EN_BLP INTO VCOBRA_HABERES_BLP
FROM
( SELECT COBRA_EN_BLP FROM NOPRECALIFICADOS_COBRAEN_BLP
UNION
SELECT COBRA_EN_BLP FROM PRECALIFICADOS_COBRAEN_BLP ) AS T
WHERE EXISTS ( SELECT * FROM CLIENTES . CLIENTE C
WHERE ID = PCLIENTE_ID AND ESTADO_ID = 4 )
ORDER BY COBRA_EN_BLP DESC
FETCH FIRST 1 ROW ONLY ;

-- 
SELECT CASE WHEN COUNT ( LC . ID ) > 0 THEN 0 ELSE 1 END INTO VRECALCULAR_PERFIL
FROM CLIENTES . CLIENTE LC
INNER JOIN CLIENTES . MOTIVO_VINCULACION MV ON LC . ID = CLIENTE_ID
WHERE
( ESTADO_ID = 4 AND VCOBRA_HABERES_BLP <> 1 AND
LC . ID = PCLIENTE_ID ) OR
( ( ESTADO_ID <> 4 OR ( ESTADO_ID = 4 AND VCOBRA_HABERES_BLP = 1 ) ) AND
LC . ID = PCLIENTE_ID AND
( ( IFNULL ( LC . PERFIL , 0 ) = IFNULL ( MV . PERFIL_INICIAL , 0 ) AND
CLIENTES . FNVENTASM ( LC . ID ) = 0 )
OR
( CLIENTES . FNVENTASM ( LC . ID ) <> 0 AND
CLIENTES . FNVENTASM ( LC . ID ) = PERFIL_VENTAS_MENSUALES )
) ) ;

FIN: 
RETURN VRECALCULAR_PERFIL ;
END